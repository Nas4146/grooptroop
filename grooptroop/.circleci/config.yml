version: 2.1

jobs:
  build-and-test:
    macos:
      xcode: 15.3.0 # Use the latest stable Xcode
    
    resource_class: macos.x86.medium.gen2
    
    steps:
      - checkout
      
      # Setup Node.js environment
      - node/install:
          node-version: '20.10.0'
      
      # Restore cached dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      
      # Install dependencies
      - run:
          name: Install dependencies
          command: npm install

      - run:
          name: Create .env file
          command: |
            echo "API_URL=$API_URL" >> .env
            echo "FIREBASE_API_KEY=$FIREBASE_API_KEY" >> .env
            echo "FIREBASE_AUTH_DOMAIN=$FIREBASE_AUTH_DOMAIN" >> .env
            echo "FIREBASE_PROJECT_ID=$FIREBASE_PROJECT_ID" >> .env
            echo "FIREBASE_STORAGE_BUCKET=$FIREBASE_STORAGE_BUCKET" >> .env
            echo "FIREBASE_MESSAGING_SENDER_ID=$FIREBASE_MESSAGING_SENDER_ID" >> .env
            echo "FIREBASE_APP_ID=$FIREBASE_APP_ID" >> .env
            echo "VITE_FIREBASE_MEASUREMENT_ID=$VITE_FIREBASE_MEASUREMENT_ID" >> .env
            echo "CLIENT_EMAIL=$CLIENT_EMAIL" >> .env
            echo "FIREBASE_PRIVATE_KEY=$FIREBASE_PRIVATE_KEY" >> .env    
      
      # Save cache
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      
      # Run tests
      - run:
          name: Run tests
          command: npm test
          
      # Optionally build the app
      - run:
          name: Build iOS app
          command: |
            cd ios
            pod install
            cd ..
            npx expo prebuild --platform ios --no-install
          no_output_timeout: 20m
      
      # Store artifacts
      - store_artifacts:
          path: ios/build

      
  deploy-eas:
    macos:
      xcode: 15.3.0
    resource_class: macos.x86.medium.gen2
    steps:
      - checkout
      - node/install:
          node-version: '20.10.0'
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Login to EAS
          command: npx eas-cli login --non-interactive
      - run:
          name: EAS Build & Submit
          command: |
            if [[ $CIRCLE_BRANCH == "main" ]]; then
              # Production build
              npx eas build --platform ios --non-interactive
            else
              # Preview build
              npx eas build --platform ios --profile preview --non-interactive
            fi
     

notify:
    # Built-in email notifications
  email:
    recipients:
      - nick.sanders.a@gmail.com  # Replace with your email
    branches:
      only:
        - main
        - staging

orbs:
  node: circleci/node@5.1.0


workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test
      - deploy-eas:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - main
                - staging